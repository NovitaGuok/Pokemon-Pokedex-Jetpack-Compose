plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'org.jlleitschuh.gradle.ktlint' version '11.0.0'
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

def localPropertiesFile = rootProject.file("local.properties")
def localProperties = new Properties()
localProperties.load(new FileInputStream(localPropertiesFile))

android {
    namespace 'com.compose.pokemonapp.novita'
    compileSdk 32

    def versionMajor = 1
    def versionMinor = 1
    def versionPatch = 1
    def dbVersion = 1

    defaultConfig {
        applicationId "com.compose.pokemonapp.novita"
        minSdk 21
        targetSdk 32
        versionCode versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        buildConfigField("String", "BASE_URL", "\"" + localProperties['BASE_URL'] + "\"")
        buildConfigField("int", "DB_VERSION", "${dbVersion}")
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    signingConfigs {
        staging.initWith(signingConfigs.debug)
        release {
            keyAlias = keystoreProperties["keyAlias"]
            keyPassword = keystoreProperties["keyPassword"]
            storeFile = file(keystoreProperties["storeFile"])
            storePassword = keystoreProperties["storePassword"]
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'retrofit2.pro'
            signingConfig signingConfigs.release
        }
        debug {
            versionNameSuffix ".debug"
            resValue "string", "app_version", "${defaultConfig.versionName}${versionNameSuffix}"
        }
        customDebugType {
            debuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }
    packagingOptions {
        resources {
            excludes += "META-INF/*"
        }
    }
}

tasks.getByPath("preBuild").dependsOn("ktlintFormat")
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += "-Xopt-in=kotlin.RequiresOptIn"
    }
}

ktlint {
    android = true
    ignoreFailures = false
    reporters {
        reporter "plain"
        reporter "checkstyle"
        reporter "sarif"
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation 'androidx.compose.material:material:1.1.1'
    implementation "androidx.hilt:hilt-navigation-compose:$compose_navigation_version"
    implementation "androidx.navigation:navigation-compose:$nav_version"
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"

    // DI
    implementation "com.google.dagger:hilt-android:$dagger_hilt_version"
    testImplementation "com.google.dagger:hilt-android-testing:$dagger_hilt_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$dagger_hilt_version"
    kapt "com.google.dagger:hilt-compiler:$dagger_hilt_version"
    kaptTest "com.google.dagger:hilt-compiler:$dagger_hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$dagger_hilt_version"

    // Gson
    implementation "com.google.code.gson:gson:$gson_version"

    // Image Loader
    implementation "io.coil-kt:coil-compose:$coil_compose_version"
    implementation "io.coil-kt:coil-gif:$coil_compose_version"

    // Log
    implementation "com.jakewharton.timber:timber:$timber_version"

    // Okhttp
    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.10.0"))
    implementation "com.squareup.okhttp3:okhttp"
    implementation "com.squareup.okhttp3:logging-interceptor"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$gson_converter_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-paging:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // Testing
    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "androidx.arch.core:core-testing:$arch_core_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"
}

kapt {
    correctErrorTypes true
}